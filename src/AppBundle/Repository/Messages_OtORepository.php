<?php

namespace AppBundle\Repository;

/**
 * Messages_OtORepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class Messages_OtORepository extends \Doctrine\ORM\EntityRepository
{

    public function findMsgByUserID($user, $fromUser)
    {

        return $this->getEntityManager()
            ->createQuery('SELECT p FROM AppBundle:Messages_OtO p WHERE (p.toUser = '.$user.' AND p.fromUser = '.$fromUser.') or (p.toUser = '.$fromUser.' AND p.fromUser = '.$user.') ORDER BY p.createdAt ASC ')
            ->execute();
    }

    public function findConversationsByUserID($user)
    {

        return $this->getEntityManager()
            ->createQuery('SELECT  p FROM AppBundle:Messages_OtO p WHERE (p.toUser = '.$user.') or (p.fromUser = '.$user.') group by p.fromUser, p.toUser')
            ->execute();
    }
    public function findMsgUnreadByUserID($user)
    {

        return $this->getEntityManager()
            ->createQuery('SELECT t.username as ,(p.fromUser) as fromUser ,count (p.id) As cnt FROM AppBundle:Messages_OtO p, AppBundle:User t  WHERE p.toUser = '.$user.' AND p.readAt IS NULL And t.id = p.fromUser group by p.fromUser')
            ->execute();
    }

    public function countMsgUnreadByUserID($user)
    {

        return $this->getEntityManager()
            ->createQuery('SELECT count (p.id) As cnt FROM AppBundle:Messages_OtO p, AppBundle:User t  WHERE p.toUser = '.$user.' AND p.readAt IS NULL And t.id = p.fromUser')
            ->execute();
    }

    public function updateMsgsTime($user, $fromUser, $date){

        return $this->getEntityManager()
            ->createQuery('UPDATE AppBundle:Messages_OtO p SET p.readAt = CURRENT_TIMESTAMP() WHERE (p.toUser = '.$user.' AND p.fromUser = '.$fromUser.')')
            ->execute();
    }

}
